!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=o(n(1));let i;const c="ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0;var u;!function(e){e[e.UP=38]="UP",e[e.DOWN=40]="DOWN",e[e.LEFT=37]="LEFT",e[e.RIGHT=39]="RIGHT"}(u||(u={}));window.screen.width,window.screen.height;const l=[{x:33,y:50},{x:32,y:50},{x:31,y:50},{x:30,y:50}];let s,a,d,h,f=u.RIGHT,y=6,x=l,p=[];function g(){d.clearRect(0,0,a.width,a.height),b(),d.strokeStyle=h,d.lineWidth=2,d.lineCap="round",d.lineJoin="round",d.beginPath(),null==d||d.moveTo(x[0].x,x[0].y),x.slice(1).forEach(e=>null==d?void 0:d.lineTo(e.x,e.y)),d.stroke(),p.forEach(e=>{d.beginPath(),d.strokeStyle="red",d.fillStyle="red",d.arc(e.x,e.y,.5,0,2*Math.PI),d.stroke(),d.fill()}),c?a.ontouchstart=v:document.onkeydown=w;const e=function(e){switch(f){case u.DOWN:return{x:e.x,y:e.y+1};case u.UP:return{x:e.x,y:e.y-1};case u.RIGHT:return{x:e.x+1,y:e.y};case u.LEFT:return{x:e.x-1,y:e.y};default:return e}}(x[0]);var t;!function(e){p.forEach((t,n)=>{(function(e,t,n){let o=Math.pow(Math.abs(e.x-t.x),2),r=Math.pow(Math.abs(e.y-t.y),2);return n-Math.pow(o+r,.5)>0})(t,e,2)&&(null==i||i.increment(1),p.splice(n,1),y++)})}(e),p.length<3&&function(){let e={x:5+Math.floor(190*Math.random()),y:5+Math.floor(190*Math.random())};x.find(t=>t==e)||p.find(t=>t==e)||p.push(e)}(),t=e,(x.find(e=>e===t)||t.x>=200||t.x<=0||t.y>=200||t.y<=0)&&T(),x=[e,...x],x.length>y&&x.pop()}function m(){i.reset(),p=[],x=l,y=6,f=u.RIGHT,s=setInterval(g,17)}function T(){clearInterval(s)}function w(e){const t=37+(f-37+2)%4;e.keyCode in u&&e.keyCode!==t&&(f=e.keyCode,document.onkeydown=null)}function v(e){let t=a.getBoundingClientRect(),n=e.touches[0].clientX-t.x,o=e.touches[0].clientY-t.y,r=t.width*x[x.length-1].x/200,i=t.height*x[x.length-1].y/200;const c=f==u.LEFT||f==u.RIGHT;f=c?o<i?u.UP:u.DOWN:n<r?u.LEFT:u.RIGHT}function b(){d.rect(0,0,a.width,a.height),d.strokeStyle="black",d.lineWidth=1,d.stroke()}window.onload=()=>{document.querySelector("#startButton").addEventListener("click",m),document.querySelector("#stopButton").addEventListener("click",T),a=document.querySelector("#game"),i=new r.default(document.querySelector("#scoreBox"));try{d=a.getContext("2d")}catch(e){console.log("could not find ctx")}h=d.createLinearGradient(0,0,a.width,a.height),h.addColorStop(.25,"#73e943"),h.addColorStop(.75,"#73e943"),h.addColorStop(.5,"#42801d"),b()}},function(e,t,n){"use strict";e.exports=class{constructor(e,t){this._score=t||0,this.element=e,this.element.innerText=this.score.toString()}get score(){return this._score}set score(e){this._score=e,this.element.innerText=this._score.toString()}reset(){this._score=0,this.element.innerText="0"}increment(e){this._score+=e,this.element.innerText=this._score.toString()}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,